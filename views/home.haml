
<!DOCTYPE html>
%html{lang: "en"}
	%head

		%title AidData Sector Codes
		%link{ href: "//netdna.bootstrapcdn.com/bootswatch/2.3.0/cosmo/bootstrap.min.css", rel: "stylesheet"}
		%script{ src: 'ga.js'}

	%body
		.container
			%h1.span12.page-header 
				AidData Sector Codes


			%p.span12
				AidData sector codes are used to categorize development projects.
			%p.span12
				See the 
				%a{href: "http://www.aiddata.org/content/index/user-guide/coding-scheme" } AidData website 
				for more information about the codes
				or the
				%a{href: "https://github.com/rmosolgo/aiddata-codes" } API docs
				for more about this website.
			
			%h2
				Search codes:

			#params.span12.row-fluid
				.span3
					Match text:
					%input#text.param{ type: 'text'}
				.span3
					Starts with:
					%input#prefix.param{ type: 'text'}
				.span3
					Ends with:
					%input#suffix.param{ type: 'text'}
				.span3
					Type:
					%select#type.param
						%option
						%option{value: "activity"} Activity
						%option{value: "purpose"} Purpose
						%option{value: "sector"} Sector
						%option{value: "supersector"} Supersector


			%p.span12
				%span#matches
					0
				codes:


			%table#results.span12.table.table-hover
				%thead
					%tr
						%th #
						%th Code
						%th Name
						%th Type
				%tbody

		%script{ src: "jquery.js" }
		%script{ src: "finch.js" }

		:coffee
			App = window.App || {}
			App.data = []
			
			$.post("/codes", (data) ->
				App.data = $.parseJSON(data) || []
				console.log "loaded"

				search_codes = (params) ->
					console.log "searching", params
					if App.data? and App.data.length > 0	
						data = App.data.filter((d) ->
							passes = true
							if params["type"]
								passes = passes and d.type == params["type"]
							if params["text"]
								passes = passes and d.name.toLowerCase().indexOf(params["text"].toLowerCase()) != -1
							if params["prefix"]
								passes = passes and d.code[0..params["prefix"].length-1] == params["prefix"]
							if params["suffix"]
								passes = passes and d.code[-params["suffix"].length..] == params["suffix"]
							passes
							)

						console.log data
						new_rows = ("<tr>
										<td> "+(i+1)+"</td>
										<td> "+d["code"]+"</td>
										<td> "+d["name"]+"</td>
										<td> "+d["type"]+"</td>
									</tr>
						" for d, i in data).join()
						$('#results tbody').html(new_rows)
						$('#matches').text(data.length)
					else
						console.log "Not loaded yet..." 
						# setTimeout(search_codes(params), 500)
				




				
					

				Finch.route "/", () ->
					Finch.observe (params) ->
						if text = params('text')
							$('#text').val(text)
						if prefix = params('prefix')
							$('#prefix').val(prefix)
						if suffix = params('suffix')
							$('#suffix').val(suffix)
						if type = params('type')
							$('#type').val(type)

						params =
							text: text 
							suffix: suffix
							prefix: prefix
							type: type

						console.log "Observed ", params
						search_codes(params)
				
				Finch.listen()			


			
				navigate_to_params = () ->
					params = {}
					for input in $('.param')
						# console.log input
						if input.value != ''
							params[input.id] = input.value

					console.log "navigate_to", Finch.navigate "/", params, false

				$('.param').on('change', (e) -> navigate_to_params() )
				$('.param').on('keyup', (e) -> navigate_to_params() )

			)



